{
  "{\"filename\":\"C:/Users/David/gulpfile.babel.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"C:/Users/David\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "lodash",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "_"
              }
            ]
          },
          {
            "source": "del",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "del"
              }
            ]
          },
          {
            "source": "gulp",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "gulp"
              }
            ]
          },
          {
            "source": "grunt",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "grunt"
              }
            ]
          },
          {
            "source": "path",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "path"
              }
            ]
          },
          {
            "source": "through2",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "through2"
              }
            ]
          },
          {
            "source": "gulp-load-plugins",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "gulpLoadPlugins"
              }
            ]
          },
          {
            "source": "http",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "http"
              }
            ]
          },
          {
            "source": "opn",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "opn"
              }
            ]
          },
          {
            "source": "lazypipe",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "lazypipe"
              }
            ]
          },
          {
            "source": "nodemon",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "nodemon"
              }
            ]
          },
          {
            "source": "karma",
            "imported": [
              "Server"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Server",
                "local": "KarmaServer"
              }
            ]
          },
          {
            "source": "run-sequence",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "runSequence"
              }
            ]
          },
          {
            "source": "gulp-protractor",
            "imported": [
              "protractor",
              "webdriver_update"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "protractor",
                "local": "protractor"
              },
              {
                "kind": "named",
                "imported": "webdriver_update",
                "local": "webdriver_update"
              }
            ]
          },
          {
            "source": "isparta",
            "imported": [
              "Instrumenter"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Instrumenter",
                "local": "Instrumenter"
              }
            ]
          },
          {
            "source": "webpack",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "webpack"
              }
            ]
          },
          {
            "source": "./webpack.make",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "makeWebpackConfig"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "C:/Users/David/gulpfile.babel.js",
      "filenameRelative": "C:/Users/David/gulpfile.babel.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "gulpfile.babel.js",
      "sourceFileName": "gulpfile.babel.js",
      "sourceRoot": "C:/Users/David",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "C:/Users/David",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "gulpfile.babel"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _del = require('del');\n\nvar _del2 = _interopRequireDefault(_del);\n\nvar _gulp = require('gulp');\n\nvar _gulp2 = _interopRequireDefault(_gulp);\n\nvar _grunt = require('grunt');\n\nvar _grunt2 = _interopRequireDefault(_grunt);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _through = require('through2');\n\nvar _through2 = _interopRequireDefault(_through);\n\nvar _gulpLoadPlugins = require('gulp-load-plugins');\n\nvar _gulpLoadPlugins2 = _interopRequireDefault(_gulpLoadPlugins);\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _opn = require('opn');\n\nvar _opn2 = _interopRequireDefault(_opn);\n\nvar _lazypipe = require('lazypipe');\n\nvar _lazypipe2 = _interopRequireDefault(_lazypipe);\n\nvar _nodemon = require('nodemon');\n\nvar _nodemon2 = _interopRequireDefault(_nodemon);\n\nvar _karma = require('karma');\n\nvar _runSequence = require('run-sequence');\n\nvar _runSequence2 = _interopRequireDefault(_runSequence);\n\nvar _gulpProtractor = require('gulp-protractor');\n\nvar _isparta = require('isparta');\n\nvar _webpack = require('webpack');\n\nvar _webpack2 = _interopRequireDefault(_webpack);\n\nvar _webpack3 = require('./webpack.make');\n\nvar _webpack4 = _interopRequireDefault(_webpack3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar plugins = (0, _gulpLoadPlugins2.default)(); // Generated on 2019-10-17 using generator-angular-fullstack 5.0.0-rc.4\n\nvar config;\n\nconst clientPath = 'client';\nconst serverPath = 'server';\nconst paths = {\n    client: {\n        assets: `${clientPath}/assets/**/*`,\n        images: `${clientPath}/assets/images/**/*`,\n        revManifest: `${clientPath}/assets/rev-manifest.json`,\n        scripts: [`${clientPath}/**/!(*.spec|*.mock).ts`],\n        styles: [`${clientPath}/{app,components}/**/*.css`],\n        mainStyle: `${clientPath}/app/app.css`,\n        views: `${clientPath}/{app,components}/**/*.html`,\n        mainView: `${clientPath}/app.html`,\n        test: [`${clientPath}/{app,components}/**/*.{spec,mock}.ts`],\n        e2e: ['e2e/**/*.spec.js']\n    },\n    server: {\n        scripts: [`${serverPath}/**/!(*.spec|*.integration).js`, `!${serverPath}/config/local.env.sample.js`],\n        json: [`${serverPath}/**/*.json`],\n        test: {\n            integration: [`${serverPath}/**/*.integration.js`, 'mocha.global.js'],\n            unit: [`${serverPath}/**/*.spec.js`, 'mocha.global.js']\n        }\n    },\n    karma: 'karma.conf.js',\n    dist: 'dist'\n};\n\n/********************\n * Helper functions\n ********************/\n\nfunction onServerLog(log) {\n    console.log(plugins.util.colors.white('[') + plugins.util.colors.yellow('nodemon') + plugins.util.colors.white('] ') + log.message);\n}\n\nfunction checkAppReady(cb) {\n    var options = {\n        host: 'localhost',\n        port: config.port\n    };\n    _http2.default.get(options, () => cb(true)).on('error', () => cb(false));\n}\n\n// Call page until first success\nfunction whenServerReady(cb) {\n    var serverReady = false;\n    var appReadyInterval = setInterval(() => checkAppReady(ready => {\n        if (!ready || serverReady) {\n            return;\n        }\n        clearInterval(appReadyInterval);\n        serverReady = true;\n        cb();\n    }), 100);\n}\n\n/********************\n * Reusable pipelines\n ********************/\n\nlet lintClientScripts = (0, _lazypipe2.default)().pipe(plugins.tslint, { formatter: 'verbose' }).pipe(plugins.tslint.report, { emitError: false });\n\nconst lintClientTestScripts = (0, _lazypipe2.default)().pipe(plugins.tslint, { formatter: 'verbose' }).pipe(plugins.tslint.report, { emitError: false });\n\nlet lintServerScripts = (0, _lazypipe2.default)().pipe(plugins.eslint, `${serverPath}/.eslintrc`).pipe(plugins.eslint.format);\n\nlet lintServerTestScripts = (0, _lazypipe2.default)().pipe(plugins.eslint, {\n    configFile: `${serverPath}/.eslintrc`,\n    envs: ['node', 'es6', 'mocha']\n}).pipe(plugins.eslint.format);\n\nlet transpileServer = (0, _lazypipe2.default)().pipe(plugins.sourcemaps.init).pipe(plugins.babel, {\n    plugins: ['transform-class-properties', 'transform-runtime']\n}).pipe(plugins.sourcemaps.write, '.');\n\nlet mocha = (0, _lazypipe2.default)().pipe(plugins.mocha, {\n    reporter: 'spec',\n    timeout: 5000,\n    require: ['./mocha.conf']\n});\n\nlet istanbul = (0, _lazypipe2.default)().pipe(plugins.istanbul.writeReports).pipe(plugins.istanbulEnforcer, {\n    thresholds: {\n        global: {\n            lines: 80,\n            statements: 80,\n            branches: 80,\n            functions: 80\n        }\n    },\n    coverageDirectory: './coverage',\n    rootDirectory: ''\n});\n\n/********************\n * Env\n ********************/\n\n_gulp2.default.task('env:all', () => {\n    let localConfig;\n    try {\n        localConfig = require(`./${serverPath}/config/local.env`);\n    } catch (e) {\n        localConfig = {};\n    }\n    plugins.env({\n        vars: localConfig\n    });\n});\n_gulp2.default.task('env:test', () => {\n    plugins.env({\n        vars: { NODE_ENV: 'test' }\n    });\n});\n_gulp2.default.task('env:prod', () => {\n    plugins.env({\n        vars: { NODE_ENV: 'production' }\n    });\n});\n\n/********************\n * Tasks\n ********************/\n\n_gulp2.default.task('inject', cb => {\n    (0, _runSequence2.default)(['inject:css'], cb);\n});\n\n_gulp2.default.task('inject:css', () => {\n    return _gulp2.default.src(paths.client.mainStyle).pipe(plugins.inject(_gulp2.default.src(_lodash2.default.union(paths.client.styles, ['!' + paths.client.mainStyle]), { read: false }).pipe(plugins.sort()), {\n        starttag: '/* inject:css */',\n        endtag: '/* endinject */',\n        transform: filepath => {\n            let newPath = filepath.replace(`/${clientPath}/app/`, '').replace(`/${clientPath}/components/`, '../components/').replace(/_(.*).css/, (match, p1, offset, string) => p1);\n            return `@import '${newPath}';`;\n        }\n    })).pipe(_gulp2.default.dest(`${clientPath}/app`));\n});\n\nfunction webpackCompile(options, cb) {\n    let compiler = (0, _webpack2.default)((0, _webpack4.default)(options));\n\n    compiler.run((err, stats) => {\n        if (err) return cb(err);\n\n        plugins.util.log(stats.toString({\n            colors: true,\n            timings: true,\n            chunks: options.BUILD\n        }));\n        cb();\n    });\n}\n\n_gulp2.default.task('webpack:dev', cb => webpackCompile({ DEV: true }, cb));\n_gulp2.default.task('webpack:dist', cb => webpackCompile({ BUILD: true }, cb));\n_gulp2.default.task('webpack:test', cb => webpackCompile({ TEST: true }, cb));\n\n_gulp2.default.task('styles', () => {\n    return _gulp2.default.src(paths.client.styles).pipe(styles()).pipe(_gulp2.default.dest('.tmp/app'));\n});\n\n_gulp2.default.task('transpile:server', () => {\n    return _gulp2.default.src(_lodash2.default.union(paths.server.scripts, paths.server.json)).pipe(transpileServer()).pipe(_gulp2.default.dest(`${paths.dist}/${serverPath}`));\n});\n\n_gulp2.default.task('lint:scripts', cb => (0, _runSequence2.default)(['lint:scripts:client', 'lint:scripts:server'], cb));\n\n_gulp2.default.task('lint:scripts:client', () => {\n    return _gulp2.default.src(_lodash2.default.union(paths.client.scripts, _lodash2.default.map(paths.client.test, blob => `!${blob}`))).pipe(lintClientScripts());\n});\n\n_gulp2.default.task('lint:scripts:server', () => {\n    return _gulp2.default.src(_lodash2.default.union(paths.server.scripts, _lodash2.default.map(paths.server.test, blob => '!' + blob))).pipe(lintServerScripts());\n});\n\n_gulp2.default.task('lint:scripts:clientTest', () => {\n    return _gulp2.default.src(paths.client.test).pipe(lintClientScripts());\n});\n\n_gulp2.default.task('lint:scripts:serverTest', () => {\n    return _gulp2.default.src(paths.server.test).pipe(lintServerTestScripts());\n});\n\n_gulp2.default.task('jscs', () => {\n    return _gulp2.default.src(_lodash2.default.union(paths.client.scripts, paths.server.scripts)).pipe(plugins.jscs()).pipe(plugins.jscs.reporter());\n});\n\n_gulp2.default.task('clean:tmp', () => (0, _del2.default)(['.tmp/**/*'], { dot: true }));\n\n_gulp2.default.task('start:client', cb => {\n    return require('./webpack.server').start(config.clientPort).then(() => {\n        (0, _opn2.default)(`http://localhost:${config.clientPort}`);\n        cb();\n    });\n});\n\n_gulp2.default.task('start:server', () => {\n    process.env.NODE_ENV = process.env.NODE_ENV || 'development';\n    config = require(`./${serverPath}/config/environment`);\n    (0, _nodemon2.default)(`-w ${serverPath} ${serverPath}`).on('log', onServerLog);\n});\n\n_gulp2.default.task('start:server:prod', () => {\n    process.env.NODE_ENV = process.env.NODE_ENV || 'production';\n    config = require(`./${paths.dist}/${serverPath}/config/environment`);\n    (0, _nodemon2.default)(`-w ${paths.dist}/${serverPath} ${paths.dist}/${serverPath}`).on('log', onServerLog);\n});\n\n_gulp2.default.task('start:server:debug', () => {\n    process.env.NODE_ENV = process.env.NODE_ENV || 'development';\n    config = require(`./${serverPath}/config/environment`);\n    // nodemon(`-w ${serverPath} --debug=5858 --debug-brk ${serverPath}`)\n    (0, _nodemon2.default)(`-w ${serverPath} --inspect --debug-brk ${serverPath}`).on('log', onServerLog);\n});\n\n_gulp2.default.task('watch', () => {\n    var testFiles = _lodash2.default.union(paths.client.test, paths.server.test.unit, paths.server.test.integration);\n\n    plugins.watch(_lodash2.default.union(paths.server.scripts, testFiles)).pipe(plugins.plumber()).pipe(lintServerScripts());\n\n    plugins.watch(_lodash2.default.union(paths.server.test.unit, paths.server.test.integration)).pipe(plugins.plumber()).pipe(lintServerTestScripts());\n});\n\n_gulp2.default.task('serve', cb => {\n    (0, _runSequence2.default)(['clean:tmp', 'lint:scripts', 'inject', 'copy:fonts:dev', 'env:all'],\n    // 'webpack:dev',\n    ['start:server', 'start:client'], 'watch', cb);\n});\n\n_gulp2.default.task('serve:debug', cb => {\n    (0, _runSequence2.default)(['clean:tmp', 'lint:scripts', 'inject', 'copy:fonts:dev', 'env:all'], 'webpack:dev', ['start:server:debug', 'start:client'], 'watch', cb);\n});\n\n_gulp2.default.task('serve:dist', cb => {\n    (0, _runSequence2.default)('build', 'env:all', 'env:prod', ['start:server:prod', 'start:client'], cb);\n});\n\n_gulp2.default.task('test', cb => {\n    return (0, _runSequence2.default)('test:server', 'test:client', cb);\n});\n\n_gulp2.default.task('test:server', cb => {\n    (0, _runSequence2.default)('env:all', 'env:test', 'mocha:unit', 'mocha:integration', cb);\n});\n\n_gulp2.default.task('mocha:unit', () => {\n    return _gulp2.default.src(paths.server.test.unit).pipe(mocha());\n});\n\n_gulp2.default.task('mocha:integration', () => {\n    return _gulp2.default.src(paths.server.test.integration).pipe(mocha());\n});\n\n_gulp2.default.task('test:server:coverage', cb => {\n    (0, _runSequence2.default)('coverage:pre', 'env:all', 'env:test', 'coverage:unit', 'coverage:integration', cb);\n});\n\n_gulp2.default.task('coverage:pre', () => {\n    return _gulp2.default.src(paths.server.scripts)\n    // Covering files\n    .pipe(plugins.istanbul({\n        instrumenter: _isparta.Instrumenter, // Use the isparta instrumenter (code coverage for ES6)\n        includeUntested: true\n    }))\n    // Force `require` to return covered files\n    .pipe(plugins.istanbul.hookRequire());\n});\n\n_gulp2.default.task('coverage:unit', () => {\n    return _gulp2.default.src(paths.server.test.unit).pipe(mocha()).pipe(istanbul());\n    // Creating the reports after tests ran\n});\n\n_gulp2.default.task('coverage:integration', () => {\n    return _gulp2.default.src(paths.server.test.integration).pipe(mocha()).pipe(istanbul());\n    // Creating the reports after tests ran\n});\n\n// Downloads the selenium webdriver\n_gulp2.default.task('webdriver_update', _gulpProtractor.webdriver_update);\n\n_gulp2.default.task('test:e2e', ['webpack:dist', 'env:all', 'env:test', 'start:server', 'webdriver_update'], cb => {\n    _gulp2.default.src(paths.client.e2e).pipe((0, _gulpProtractor.protractor)({\n        configFile: 'protractor.conf.js'\n    })).on('error', e => {\n        throw e;\n    }).on('end', () => {\n        process.exit();\n    });\n});\n\n_gulp2.default.task('test:client', done => {\n    new _karma.Server({\n        configFile: `${__dirname}/${paths.karma}`,\n        singleRun: true\n    }, err => {\n        done(err);\n        process.exit(err);\n    }).start();\n});\n\n/********************\n * Build\n ********************/\n\n_gulp2.default.task('build', cb => {\n    (0, _runSequence2.default)(['clean:dist', 'clean:tmp'], 'inject', 'transpile:server', ['build:images'], ['copy:extras', 'copy:assets', 'copy:fonts:dist', 'copy:server', 'webpack:dist'], 'revReplaceWebpack', cb);\n});\n\n_gulp2.default.task('clean:dist', () => (0, _del2.default)([`${paths.dist}/!(.git*|.openshift|Procfile)**`], { dot: true }));\n\n_gulp2.default.task('build:images', () => {\n    return _gulp2.default.src(paths.client.images).pipe(plugins.imagemin([plugins.imagemin.optipng({ optimizationLevel: 5 }), plugins.imagemin.jpegtran({ progressive: true }), plugins.imagemin.gifsicle({ interlaced: true }), plugins.imagemin.svgo({ plugins: [{ removeViewBox: false }] })])).pipe(plugins.rev()).pipe(_gulp2.default.dest(`${paths.dist}/${clientPath}/assets/images`)).pipe(plugins.rev.manifest(`${paths.dist}/${paths.client.revManifest}`, {\n        base: `${paths.dist}/${clientPath}/assets`,\n        merge: true\n    })).pipe(_gulp2.default.dest(`${paths.dist}/${clientPath}/assets`));\n});\n\n_gulp2.default.task('revReplaceWebpack', function () {\n    return _gulp2.default.src('dist/client/app.*.js').pipe(plugins.revReplace({ manifest: _gulp2.default.src(`${paths.dist}/${paths.client.revManifest}`) })).pipe(_gulp2.default.dest('dist/client'));\n});\n\n_gulp2.default.task('copy:extras', () => {\n    return _gulp2.default.src([`${clientPath}/favicon.ico`, `${clientPath}/robots.txt`, `${clientPath}/.htaccess`], { dot: true }).pipe(_gulp2.default.dest(`${paths.dist}/${clientPath}`));\n});\n\n/**\n * turns 'bootstrap/fonts/font.woff' into 'bootstrap/font.woff'\n */\nfunction flatten() {\n    return _through2.default.obj(function (file, enc, next) {\n        if (!file.isDirectory()) {\n            try {\n                let dir = _path2.default.dirname(file.relative).split(_path2.default.sep)[0];\n                let fileName = _path2.default.normalize(_path2.default.basename(file.path));\n                file.path = _path2.default.join(file.base, _path2.default.join(dir, fileName));\n                this.push(file);\n            } catch (e) {\n                this.emit('error', new Error(e));\n            }\n        }\n        next();\n    });\n}\n_gulp2.default.task('copy:fonts:dev', () => {\n    return _gulp2.default.src('node_modules/{bootstrap,font-awesome}/fonts/*').pipe(flatten()).pipe(_gulp2.default.dest(`${clientPath}/assets/fonts`));\n});\n_gulp2.default.task('copy:fonts:dist', () => {\n    return _gulp2.default.src('node_modules/{bootstrap,font-awesome}/fonts/*').pipe(flatten()).pipe(_gulp2.default.dest(`${paths.dist}/${clientPath}/assets/fonts`));\n});\n\n_gulp2.default.task('copy:assets', () => {\n    return _gulp2.default.src([paths.client.assets, '!' + paths.client.images]).pipe(_gulp2.default.dest(`${paths.dist}/${clientPath}/assets`));\n});\n\n_gulp2.default.task('copy:server', () => {\n    return _gulp2.default.src(['package.json'], { cwdbase: true }).pipe(_gulp2.default.dest(paths.dist));\n});\n\n/********************\n * Grunt ported tasks\n ********************/\n\n_grunt2.default.initConfig({\n    buildcontrol: {\n        options: {\n            dir: paths.dist,\n            commit: true,\n            push: true,\n            connectCommits: false,\n            message: 'Built %sourceName% from commit %sourceCommit% on branch %sourceBranch%'\n        },\n        heroku: {\n            options: {\n                remote: 'heroku',\n                branch: 'master'\n            }\n        },\n        openshift: {\n            options: {\n                remote: 'openshift',\n                branch: 'master'\n            }\n        }\n    }\n});\n\n_grunt2.default.loadNpmTasks('grunt-build-control');\n\n_gulp2.default.task('buildcontrol:heroku', function (done) {\n    _grunt2.default.tasks(['buildcontrol:heroku'], //you can add more grunt tasks in this array\n    { gruntfile: false }, //don't look for a Gruntfile - there is none. :-)\n    function () {\n        done();\n    });\n});\n_gulp2.default.task('buildcontrol:openshift', function (done) {\n    _grunt2.default.tasks(['buildcontrol:openshift'], //you can add more grunt tasks in this array\n    { gruntfile: false }, //don't look for a Gruntfile - there is none. :-)\n    function () {\n        done();\n    });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "plugins",
        "config",
        "clientPath",
        "serverPath",
        "paths",
        "client",
        "assets",
        "images",
        "revManifest",
        "scripts",
        "styles",
        "mainStyle",
        "views",
        "mainView",
        "test",
        "e2e",
        "server",
        "json",
        "integration",
        "unit",
        "karma",
        "dist",
        "onServerLog",
        "log",
        "console",
        "util",
        "colors",
        "white",
        "yellow",
        "message",
        "checkAppReady",
        "cb",
        "options",
        "host",
        "port",
        "http",
        "get",
        "on",
        "whenServerReady",
        "serverReady",
        "appReadyInterval",
        "setInterval",
        "ready",
        "clearInterval",
        "lintClientScripts",
        "pipe",
        "tslint",
        "formatter",
        "report",
        "emitError",
        "lintClientTestScripts",
        "lintServerScripts",
        "eslint",
        "format",
        "lintServerTestScripts",
        "configFile",
        "envs",
        "transpileServer",
        "sourcemaps",
        "init",
        "babel",
        "write",
        "mocha",
        "reporter",
        "timeout",
        "require",
        "istanbul",
        "writeReports",
        "istanbulEnforcer",
        "thresholds",
        "global",
        "lines",
        "statements",
        "branches",
        "functions",
        "coverageDirectory",
        "rootDirectory",
        "gulp",
        "task",
        "localConfig",
        "e",
        "env",
        "vars",
        "NODE_ENV",
        "src",
        "inject",
        "_",
        "union",
        "read",
        "sort",
        "starttag",
        "endtag",
        "transform",
        "filepath",
        "newPath",
        "replace",
        "match",
        "p1",
        "offset",
        "string",
        "dest",
        "webpackCompile",
        "compiler",
        "run",
        "err",
        "stats",
        "toString",
        "timings",
        "chunks",
        "BUILD",
        "DEV",
        "TEST",
        "map",
        "blob",
        "jscs",
        "dot",
        "start",
        "clientPort",
        "then",
        "process",
        "testFiles",
        "watch",
        "plumber",
        "instrumenter",
        "Instrumenter",
        "includeUntested",
        "hookRequire",
        "webdriver_update",
        "exit",
        "done",
        "KarmaServer",
        "__dirname",
        "singleRun",
        "imagemin",
        "optipng",
        "optimizationLevel",
        "jpegtran",
        "progressive",
        "gifsicle",
        "interlaced",
        "svgo",
        "removeViewBox",
        "rev",
        "manifest",
        "base",
        "merge",
        "revReplace",
        "flatten",
        "through2",
        "obj",
        "file",
        "enc",
        "next",
        "isDirectory",
        "dir",
        "path",
        "dirname",
        "relative",
        "split",
        "sep",
        "fileName",
        "normalize",
        "basename",
        "join",
        "push",
        "emit",
        "Error",
        "cwdbase",
        "grunt",
        "initConfig",
        "buildcontrol",
        "commit",
        "connectCommits",
        "heroku",
        "remote",
        "branch",
        "openshift",
        "loadNpmTasks",
        "tasks",
        "gruntfile"
      ],
      "mappings": "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",
      "file": "gulpfile.babel.js",
      "sourceRoot": "C:/Users/David",
      "sourcesContent": [
        "// Generated on 2019-10-17 using generator-angular-fullstack 5.0.0-rc.4\nimport _ from 'lodash';\nimport del from 'del';\nimport gulp from 'gulp';\nimport grunt from 'grunt';\nimport path from 'path';\nimport through2 from 'through2';\nimport gulpLoadPlugins from 'gulp-load-plugins';\nimport http from 'http';\nimport opn from 'opn';\nimport lazypipe from 'lazypipe';\nimport nodemon from 'nodemon';\nimport {Server as KarmaServer} from 'karma';\nimport runSequence from 'run-sequence';\nimport {protractor, webdriver_update} from 'gulp-protractor';\nimport {Instrumenter} from 'isparta';\nimport webpack from 'webpack';\nimport makeWebpackConfig from './webpack.make';\n\nvar plugins = gulpLoadPlugins();\nvar config;\n\nconst clientPath = 'client';\nconst serverPath = 'server';\nconst paths = {\n    client: {\n        assets: `${clientPath}/assets/**/*`,\n        images: `${clientPath}/assets/images/**/*`,\n        revManifest: `${clientPath}/assets/rev-manifest.json`,\n        scripts: [\n            `${clientPath}/**/!(*.spec|*.mock).ts`\n        ],\n        styles: [`${clientPath}/{app,components}/**/*.css`],\n        mainStyle: `${clientPath}/app/app.css`,\n        views: `${clientPath}/{app,components}/**/*.html`,\n        mainView: `${clientPath}/app.html`,\n        test: [`${clientPath}/{app,components}/**/*.{spec,mock}.ts`],\n        e2e: ['e2e/**/*.spec.js']\n    },\n    server: {\n        scripts: [\n          `${serverPath}/**/!(*.spec|*.integration).js`,\n          `!${serverPath}/config/local.env.sample.js`\n        ],\n        json: [`${serverPath}/**/*.json`],\n        test: {\n          integration: [`${serverPath}/**/*.integration.js`, 'mocha.global.js'],\n          unit: [`${serverPath}/**/*.spec.js`, 'mocha.global.js']\n        }\n    },\n    karma: 'karma.conf.js',\n    dist: 'dist'\n};\n\n/********************\n * Helper functions\n ********************/\n\nfunction onServerLog(log) {\n    console.log(plugins.util.colors.white('[') +\n        plugins.util.colors.yellow('nodemon') +\n        plugins.util.colors.white('] ') +\n        log.message);\n}\n\nfunction checkAppReady(cb) {\n    var options = {\n        host: 'localhost',\n        port: config.port\n    };\n    http\n        .get(options, () => cb(true))\n        .on('error', () => cb(false));\n}\n\n// Call page until first success\nfunction whenServerReady(cb) {\n    var serverReady = false;\n    var appReadyInterval = setInterval(() =>\n        checkAppReady((ready) => {\n            if (!ready || serverReady) {\n                return;\n            }\n            clearInterval(appReadyInterval);\n            serverReady = true;\n            cb();\n        }),\n        100);\n}\n\n/********************\n * Reusable pipelines\n ********************/\n\nlet lintClientScripts = lazypipe()\n    .pipe(plugins.tslint, { formatter: 'verbose' })\n    .pipe(plugins.tslint.report, {emitError: false});\n\nconst lintClientTestScripts = lazypipe()\n    .pipe(plugins.tslint, { formatter: 'verbose' })\n    .pipe(plugins.tslint.report, {emitError: false});\n\nlet lintServerScripts = lazypipe()\n    .pipe(plugins.eslint, `${serverPath}/.eslintrc`)\n    .pipe(plugins.eslint.format);\n\nlet lintServerTestScripts = lazypipe()\n    .pipe(plugins.eslint, {\n        configFile: `${serverPath}/.eslintrc`,\n        envs: [\n            'node',\n            'es6',\n            'mocha'\n        ]\n    })\n    .pipe(plugins.eslint.format);\n\nlet transpileServer = lazypipe()\n    .pipe(plugins.sourcemaps.init)\n    .pipe(plugins.babel, {\n        plugins: [\n            'transform-class-properties',\n            'transform-runtime'\n        ]\n    })\n    .pipe(plugins.sourcemaps.write, '.');\n\nlet mocha = lazypipe()\n    .pipe(plugins.mocha, {\n        reporter: 'spec',\n        timeout: 5000,\n        require: [\n            './mocha.conf'\n        ]\n    });\n\nlet istanbul = lazypipe()\n    .pipe(plugins.istanbul.writeReports)\n    .pipe(plugins.istanbulEnforcer, {\n        thresholds: {\n            global: {\n                lines: 80,\n                statements: 80,\n                branches: 80,\n                functions: 80\n            }\n        },\n        coverageDirectory: './coverage',\n        rootDirectory : ''\n    });\n\n/********************\n * Env\n ********************/\n\ngulp.task('env:all', () => {\n    let localConfig;\n    try {\n        localConfig = require(`./${serverPath}/config/local.env`);\n    } catch (e) {\n        localConfig = {};\n    }\n    plugins.env({\n        vars: localConfig\n    });\n});\ngulp.task('env:test', () => {\n    plugins.env({\n        vars: {NODE_ENV: 'test'}\n    });\n});\ngulp.task('env:prod', () => {\n    plugins.env({\n        vars: {NODE_ENV: 'production'}\n    });\n});\n\n/********************\n * Tasks\n ********************/\n\ngulp.task('inject', cb => {\n    runSequence(['inject:css'], cb);\n});\n\ngulp.task('inject:css', () => {\n    return gulp.src(paths.client.mainStyle)\n        .pipe(plugins.inject(\n            gulp.src(_.union(paths.client.styles, ['!' + paths.client.mainStyle]), {read: false})\n                .pipe(plugins.sort()),\n            {\n                starttag: '/* inject:css */',\n                endtag: '/* endinject */',\n                transform: (filepath) => {\n                    let newPath = filepath\n                        .replace(`/${clientPath}/app/`, '')\n                        .replace(`/${clientPath}/components/`, '../components/')\n                        .replace(/_(.*).css/, (match, p1, offset, string) => p1);\n                    return `@import '${newPath}';`;\n                }\n            }))\n        .pipe(gulp.dest(`${clientPath}/app`));\n});\n\nfunction webpackCompile(options, cb) {\n    let compiler = webpack(makeWebpackConfig(options));\n\n    compiler.run((err, stats) => {\n        if(err) return cb(err);\n\n        plugins.util.log(stats.toString({\n            colors: true,\n            timings: true,\n            chunks: options.BUILD\n        }));\n        cb();\n    });\n}\n\ngulp.task('webpack:dev', cb => webpackCompile({ DEV: true }, cb));\ngulp.task('webpack:dist', cb => webpackCompile({ BUILD: true }, cb));\ngulp.task('webpack:test', cb => webpackCompile({ TEST: true }, cb));\n\ngulp.task('styles', () => {\n    return gulp.src(paths.client.styles)\n        .pipe(styles())\n        .pipe(gulp.dest('.tmp/app'));\n});\n\ngulp.task('transpile:server', () => {\n    return gulp.src(_.union(paths.server.scripts, paths.server.json))\n        .pipe(transpileServer())\n        .pipe(gulp.dest(`${paths.dist}/${serverPath}`));\n});\n\ngulp.task('lint:scripts', cb => runSequence(['lint:scripts:client', 'lint:scripts:server'], cb));\n\ngulp.task('lint:scripts:client', () => {\n    return gulp.src(_.union(\n        paths.client.scripts,\n        _.map(paths.client.test, blob => `!${blob}`)\n    ))\n        .pipe(lintClientScripts());\n});\n\ngulp.task('lint:scripts:server', () => {\n    return gulp.src(_.union(paths.server.scripts, _.map(paths.server.test, blob => '!' + blob)))\n        .pipe(lintServerScripts());\n});\n\ngulp.task('lint:scripts:clientTest', () => {\n    return gulp.src(paths.client.test)\n        .pipe(lintClientScripts());\n});\n\ngulp.task('lint:scripts:serverTest', () => {\n    return gulp.src(paths.server.test)\n        .pipe(lintServerTestScripts());\n});\n\ngulp.task('jscs', () => {\n  return gulp.src(_.union(paths.client.scripts, paths.server.scripts))\n      .pipe(plugins.jscs())\n      .pipe(plugins.jscs.reporter());\n});\n\ngulp.task('clean:tmp', () => del(['.tmp/**/*'], {dot: true}));\n\ngulp.task('start:client', cb => {\n    return require('./webpack.server').start(config.clientPort).then(() => {\n        opn(`http://localhost:${config.clientPort}`);\n        cb();\n    });\n});\n\ngulp.task('start:server', () => {\n    process.env.NODE_ENV = process.env.NODE_ENV || 'development';\n    config = require(`./${serverPath}/config/environment`);\n    nodemon(`-w ${serverPath} ${serverPath}`)\n        .on('log', onServerLog);\n});\n\ngulp.task('start:server:prod', () => {\n    process.env.NODE_ENV = process.env.NODE_ENV || 'production';\n    config = require(`./${paths.dist}/${serverPath}/config/environment`);\n    nodemon(`-w ${paths.dist}/${serverPath} ${paths.dist}/${serverPath}`)\n        .on('log', onServerLog);\n});\n\ngulp.task('start:server:debug', () => {\n    process.env.NODE_ENV = process.env.NODE_ENV || 'development';\n    config = require(`./${serverPath}/config/environment`);\n    // nodemon(`-w ${serverPath} --debug=5858 --debug-brk ${serverPath}`)\n    nodemon(`-w ${serverPath} --inspect --debug-brk ${serverPath}`)\n        .on('log', onServerLog);\n});\n\ngulp.task('watch', () => {\n    var testFiles = _.union(paths.client.test, paths.server.test.unit, paths.server.test.integration);\n\n    plugins.watch(_.union(paths.server.scripts, testFiles))\n        .pipe(plugins.plumber())\n        .pipe(lintServerScripts());\n\n    plugins.watch(_.union(paths.server.test.unit, paths.server.test.integration))\n        .pipe(plugins.plumber())\n        .pipe(lintServerTestScripts());\n});\n\ngulp.task('serve', cb => {\n    runSequence(\n        [\n            'clean:tmp',\n            'lint:scripts',\n            'inject',\n            'copy:fonts:dev',\n            'env:all'\n        ],\n        // 'webpack:dev',\n        ['start:server', 'start:client'],\n        'watch',\n        cb\n    );\n});\n\ngulp.task('serve:debug', cb => {\n    runSequence(\n        [\n            'clean:tmp',\n            'lint:scripts',\n            'inject',\n            'copy:fonts:dev',\n            'env:all'\n        ],\n        'webpack:dev',\n        ['start:server:debug', 'start:client'],\n        'watch',\n        cb\n    );\n});\n\ngulp.task('serve:dist', cb => {\n    runSequence(\n        'build',\n        'env:all',\n        'env:prod',\n        ['start:server:prod', 'start:client'],\n        cb);\n});\n\ngulp.task('test', cb => {\n    return runSequence('test:server', 'test:client', cb);\n});\n\ngulp.task('test:server', cb => {\n    runSequence(\n        'env:all',\n        'env:test',\n        'mocha:unit',\n        'mocha:integration',\n        cb);\n});\n\ngulp.task('mocha:unit', () => {\n    return gulp.src(paths.server.test.unit)\n        .pipe(mocha());\n});\n\ngulp.task('mocha:integration', () => {\n    return gulp.src(paths.server.test.integration)\n        .pipe(mocha());\n});\n\ngulp.task('test:server:coverage', cb => {\n  runSequence('coverage:pre',\n              'env:all',\n              'env:test',\n              'coverage:unit',\n              'coverage:integration',\n              cb);\n});\n\ngulp.task('coverage:pre', () => {\n  return gulp.src(paths.server.scripts)\n    // Covering files\n    .pipe(plugins.istanbul({\n        instrumenter: Instrumenter, // Use the isparta instrumenter (code coverage for ES6)\n        includeUntested: true\n    }))\n    // Force `require` to return covered files\n    .pipe(plugins.istanbul.hookRequire());\n});\n\ngulp.task('coverage:unit', () => {\n    return gulp.src(paths.server.test.unit)\n        .pipe(mocha())\n        .pipe(istanbul())\n        // Creating the reports after tests ran\n});\n\ngulp.task('coverage:integration', () => {\n    return gulp.src(paths.server.test.integration)\n        .pipe(mocha())\n        .pipe(istanbul())\n        // Creating the reports after tests ran\n});\n\n// Downloads the selenium webdriver\ngulp.task('webdriver_update', webdriver_update);\n\ngulp.task('test:e2e', ['webpack:dist', 'env:all', 'env:test', 'start:server', 'webdriver_update'], cb => {\n    gulp.src(paths.client.e2e)\n        .pipe(protractor({\n            configFile: 'protractor.conf.js',\n        }))\n        .on('error', e => { throw e })\n        .on('end', () => { process.exit() });\n});\n\ngulp.task('test:client', done => {\n    new KarmaServer({\n      configFile: `${__dirname}/${paths.karma}`,\n      singleRun: true\n    }, err => {\n        done(err);\n        process.exit(err);\n    }).start();\n});\n\n/********************\n * Build\n ********************/\n\ngulp.task('build', cb => {\n    runSequence(\n        [\n            'clean:dist',\n            'clean:tmp'\n        ],\n        'inject',\n        'transpile:server',\n        [\n            'build:images'\n        ],\n        [\n            'copy:extras',\n            'copy:assets',\n            'copy:fonts:dist',\n            'copy:server',\n            'webpack:dist'\n        ],\n        'revReplaceWebpack',\n        cb);\n});\n\ngulp.task('clean:dist', () => del([`${paths.dist}/!(.git*|.openshift|Procfile)**`], {dot: true}));\n\ngulp.task('build:images', () => {\n    return gulp.src(paths.client.images)\n        .pipe(plugins.imagemin([\n            plugins.imagemin.optipng({optimizationLevel: 5}),\n            plugins.imagemin.jpegtran({progressive: true}),\n            plugins.imagemin.gifsicle({interlaced: true}),\n            plugins.imagemin.svgo({plugins: [{removeViewBox: false}]})\n        ]))\n        .pipe(plugins.rev())\n        .pipe(gulp.dest(`${paths.dist}/${clientPath}/assets/images`))\n        .pipe(plugins.rev.manifest(`${paths.dist}/${paths.client.revManifest}`, {\n            base: `${paths.dist}/${clientPath}/assets`,\n            merge: true\n        }))\n        .pipe(gulp.dest(`${paths.dist}/${clientPath}/assets`));\n});\n\ngulp.task('revReplaceWebpack', function() {\n    return gulp.src('dist/client/app.*.js')\n        .pipe(plugins.revReplace({manifest: gulp.src(`${paths.dist}/${paths.client.revManifest}`)}))\n        .pipe(gulp.dest('dist/client'));\n});\n\ngulp.task('copy:extras', () => {\n    return gulp.src([\n        `${clientPath}/favicon.ico`,\n        `${clientPath}/robots.txt`,\n        `${clientPath}/.htaccess`\n    ], { dot: true })\n        .pipe(gulp.dest(`${paths.dist}/${clientPath}`));\n});\n\n/**\n * turns 'bootstrap/fonts/font.woff' into 'bootstrap/font.woff'\n */\nfunction flatten() {\n    return through2.obj(function(file, enc, next) {\n        if(!file.isDirectory()) {\n            try {\n                let dir = path.dirname(file.relative).split(path.sep)[0];\n                let fileName = path.normalize(path.basename(file.path));\n                file.path = path.join(file.base, path.join(dir, fileName));\n                this.push(file);\n            } catch(e) {\n                this.emit('error', new Error(e));\n            }\n        }\n        next();\n    });\n}\ngulp.task('copy:fonts:dev', () => {\n    return gulp.src('node_modules/{bootstrap,font-awesome}/fonts/*')\n        .pipe(flatten())\n        .pipe(gulp.dest(`${clientPath}/assets/fonts`));\n});\ngulp.task('copy:fonts:dist', () => {\n    return gulp.src('node_modules/{bootstrap,font-awesome}/fonts/*')\n        .pipe(flatten())\n        .pipe(gulp.dest(`${paths.dist}/${clientPath}/assets/fonts`));\n});\n\ngulp.task('copy:assets', () => {\n    return gulp.src([paths.client.assets, '!' + paths.client.images])\n        .pipe(gulp.dest(`${paths.dist}/${clientPath}/assets`));\n});\n\ngulp.task('copy:server', () => {\n    return gulp.src([\n        'package.json'\n    ], {cwdbase: true})\n        .pipe(gulp.dest(paths.dist));\n});\n\n/********************\n * Grunt ported tasks\n ********************/\n\ngrunt.initConfig({\n    buildcontrol: {\n        options: {\n            dir: paths.dist,\n            commit: true,\n            push: true,\n            connectCommits: false,\n            message: 'Built %sourceName% from commit %sourceCommit% on branch %sourceBranch%'\n        },\n        heroku: {\n            options: {\n                remote: 'heroku',\n                branch: 'master'\n            }\n        },\n        openshift: {\n            options: {\n                remote: 'openshift',\n                branch: 'master'\n            }\n        }\n    }\n});\n\ngrunt.loadNpmTasks('grunt-build-control');\n\ngulp.task('buildcontrol:heroku', function(done) {\n    grunt.tasks(\n        ['buildcontrol:heroku'],    //you can add more grunt tasks in this array\n        {gruntfile: false}, //don't look for a Gruntfile - there is none. :-)\n        function() {done();}\n    );\n});\ngulp.task('buildcontrol:openshift', function(done) {\n    grunt.tasks(\n        ['buildcontrol:openshift'],    //you can add more grunt tasks in this array\n        {gruntfile: false}, //don't look for a Gruntfile - there is none. :-)\n        function() {done();}\n    );\n});\n"
      ]
    },
    "mtime": 1571292414289
  },
  "{\"filename\":\"C:/Users/David/webpack.make.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"C:/Users/David\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "C:/Users/David/webpack.make.js",
      "filenameRelative": "C:/Users/David/webpack.make.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "webpack.make.js",
      "sourceFileName": "webpack.make.js",
      "sourceRoot": "C:/Users/David",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "C:/Users/David",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "webpack.make"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*eslint-env node*/\nconst _ = require('lodash');\nconst CompressionPlugin = require('compression-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst HtmlWebpackHarddiskPlugin = require('html-webpack-harddisk-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nconst path = require('path');\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\nconst webpack = require('webpack');\n\nmodule.exports = function makeWebpackConfig(options) {\n    /**\n     * Environment type\n     * BUILD is for generating minified builds\n     * TEST is for generating test builds\n     */\n    const BUILD = !!options.BUILD;\n    const TEST = !!options.TEST;\n    const DEV = !!options.DEV;\n\n    /**\n     * Config\n     * Reference: http://webpack.github.io/docs/configuration.html\n     * This is the object where all configuration gets set\n     */\n    const config = {};\n\n    config.mode = BUILD ? 'production' : 'development';\n\n    /**\n     * Entry\n     * Reference: http://webpack.github.io/docs/configuration.html#entry\n     * Should be an empty object if it's generating a test build\n     * Karma will set this when it's a test build\n     */\n    if (!TEST) {\n        config.entry = {\n            app: './client/app/app.ts',\n            polyfills: './client/app/polyfills.ts',\n            vendor: ['lodash']\n        };\n    }\n\n    /**\n     * Output\n     * Reference: http://webpack.github.io/docs/configuration.html#output\n     * Should be an empty object if it's generating a test build\n     * Karma will handle setting it up for you when it's a test build\n     */\n    if (TEST) {\n        config.output = {};\n    } else {\n        config.output = {\n            // Absolute output directory\n            path: BUILD ? path.join(__dirname, '/dist/client/') : path.join(__dirname, '/.tmp/'),\n\n            // Output path from the view of the page\n            // Uses webpack-dev-server in development\n            publicPath: BUILD || DEV ? '/' : `http://localhost:${8080}/`,\n            //publicPath: BUILD ? '/' : 'http://localhost:' + env.port + '/',\n\n            // Filename for entry points\n            // Only adds hash in build mode\n            filename: BUILD ? '[name].[hash].js' : '[name].bundle.js',\n\n            // Filename for non-entry points\n            // Only adds hash in build mode\n            chunkFilename: BUILD ? '[name].[hash].js' : '[name].bundle.js'\n        };\n    }\n\n    config.resolve = {\n        modules: ['node_modules'],\n        extensions: ['.js', '.ts'],\n        alias: {\n            primus: path.resolve(__dirname, 'client/components/socket/primus.js')\n        }\n    };\n\n    if (TEST) {\n        config.resolve = {\n            modules: ['node_modules'],\n            extensions: ['.js', '.ts'],\n            alias: {\n                // for some reason the primus client and webpack don't get along in test\n                primus: path.resolve(__dirname, 'client/components/socket/primus.mock.ts')\n            }\n        };\n    }\n\n    /**\n     * Devtool\n     * Reference: http://webpack.github.io/docs/configuration.html#devtool\n     * Type of sourcemap to use per build type\n     */\n    if (TEST) {\n        config.devtool = 'inline-source-map';\n    } else if (BUILD || DEV) {\n        config.devtool = 'source-map';\n    } else {\n        config.devtool = 'eval';\n    }\n\n    /**\n     * Loaders\n     * Reference: http://webpack.github.io/docs/configuration.html#module-loaders\n     * List: http://webpack.github.io/docs/list-of-loaders.html\n     * This handles most of the magic responsible for converting modules\n     */\n\n    // Initialize module\n    config.module = {\n        rules: [{\n            // JS LOADER\n            // Reference: https://github.com/babel/babel-loader\n            // Transpile .js files using babel-loader\n            // Compiles ES6 and ES7 into ES5 code\n            test: /\\.js$/,\n            use: [{\n                loader: 'babel-loader',\n                options: {\n                    presets: [['babel-preset-env', {\n                        // debug: true,\n                        targets: {\n                            browsers: ['last 2 versions', 'not dead']\n                        },\n                        debug: true,\n                        modules: false\n                    }]],\n                    plugins: ['angular2-annotations', 'transform-runtime', 'transform-decorators-legacy', 'transform-class-properties', 'transform-export-extensions'].concat(TEST ? ['istanbul'] : [])\n                }\n            }].concat(DEV ? '@angularclass/hmr-loader' : []),\n            include: [path.resolve(__dirname, 'client/'), path.resolve(__dirname, 'server/config/environment/shared.js'), path.resolve(__dirname, 'node_modules/lodash-es/')]\n        }, {\n            // TS LOADER\n            // Reference: https://github.com/s-panferov/awesome-typescript-loader\n            // Transpile .ts files using awesome-typescript-loader\n            test: /\\.ts$/,\n            use: [{\n                loader: 'awesome-typescript-loader',\n                options: {\n                    tsconfig: path.resolve(__dirname, 'tsconfig.json')\n                }\n            }].concat(DEV ? '@angularclass/hmr-loader' : []),\n            include: [path.resolve(__dirname, 'client/')]\n        }, {\n            // ASSET LOADER\n            // Reference: https://github.com/webpack/file-loader\n            // Copy png, jpg, jpeg, gif, svg, woff, woff2, ttf, eot files to output\n            // Rename the file using the asset hash\n            // Pass along the updated reference to your code\n            // You can add here any file extension you want to get copied to your output\n            test: /\\.(png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)([\\?]?.*)$/,\n            use: 'file-loader'\n        }, {\n\n            // HTML LOADER\n            // Reference: https://github.com/webpack/raw-loader\n            // Allow loading html through js\n            test: /\\.html$/,\n            use: 'raw-loader'\n        }, {\n            // CSS LOADER\n            // Reference: https://github.com/webpack/css-loader\n            // Allow loading css through js\n            //\n            // Reference: https://github.com/postcss/postcss-loader\n            // Postprocess your css with PostCSS plugins\n            test: /\\.css$/,\n            use: [DEV ? 'style-loader' : MiniCssExtractPlugin.loader, 'css-loader', 'postcss-loader'],\n            include: [path.resolve(__dirname, 'node_modules/bootstrap/dist/css/*.css'), path.resolve(__dirname, 'client/app/app.css')]\n        }, {\n            // CSS LOADER\n            // Reference: https://github.com/webpack/css-loader\n            test: /\\.css$/,\n            use: ['to-string-loader', 'css-loader?sourceMap', 'postcss-loader'],\n            include: [path.resolve(__dirname, 'client')],\n            exclude: [/app\\.css$/]\n        }]\n    };\n\n    //TODO: TS Instrumenter\n\n    /**\n     * Plugins\n     * Reference: http://webpack.github.io/docs/configuration.html#plugins\n     * List: http://webpack.github.io/docs/list-of-plugins.html\n     */\n    config.plugins = [\n    // Hides the 'the request of a dependency is an expression' warnings\n    new webpack.ContextReplacementPlugin(/angular(\\\\|\\/)core/, path.resolve(__dirname, '../src')), new webpack.LoaderOptionsPlugin({\n        options: {\n            context: __dirname\n        }\n\n    })];\n\n    if (BUILD) {\n        config.plugins.push(new CompressionPlugin({}),\n        // https://github.com/webpack-contrib/mini-css-extract-plugin\n        new MiniCssExtractPlugin({\n            filename: '[name].[hash].css',\n            chunkFilename: '[id].[hash].css'\n        }));\n    }\n\n    // Skip rendering app.html in test mode\n    // Reference: https://github.com/ampedandwired/html-webpack-plugin\n    // Render app.html\n    if (!TEST) {\n        config.plugins.push(new HtmlWebpackPlugin({\n            template: 'client/app.template.html',\n            filename: '../client/app.html',\n            alwaysWriteToDisk: true\n        }), new HtmlWebpackHarddiskPlugin());\n    }\n\n    let localEnv;\n    try {\n        localEnv = require('./server/config/local.env').default;\n    } catch (e) {\n        localEnv = {};\n    }\n    localEnv = _.mapValues(localEnv, value => `\"${value}\"`);\n    localEnv = _.mapKeys(localEnv, (value, key) => `process.env.${key}`);\n\n    let env = _.merge({\n        'process.env.NODE_ENV': DEV ? '\"development\"' : BUILD ? '\"production\"' : TEST ? '\"test\"' : '\"development\"'\n    }, localEnv);\n\n    // Reference: https://webpack.github.io/docs/list-of-plugins.html#defineplugin\n    // Define free global variables\n    config.plugins.push(new webpack.DefinePlugin(env));\n\n    if (DEV) {\n        config.plugins.push(new webpack.HotModuleReplacementPlugin());\n    }\n\n    config.cache = DEV;\n\n    if (BUILD) {\n        config.optimization = {\n            splitChunks: {\n                cacheGroups: {\n                    styles: {\n                        name: 'styles',\n                        test: /\\.css$/,\n                        chunks: 'all',\n                        enforce: true\n                    }\n                }\n            },\n            minimizer: [new UglifyJsPlugin({\n                cache: true,\n                parallel: true,\n                sourceMap: true // set to true if you want JS source maps\n            }), new OptimizeCssAssetsPlugin({})]\n        };\n    }\n\n    if (TEST) {\n        config.stats = {\n            colors: true,\n            reasons: true\n        };\n    }\n\n    /**\n     * Dev server configuration\n     * Reference: http://webpack.github.io/docs/configuration.html#devserver\n     * Reference: http://webpack.github.io/docs/webpack-dev-server.html\n     */\n    config.devServer = {\n        contentBase: './client/',\n        hot: true,\n        proxy: {\n            '/api': {\n                target: 'http://localhost:9000',\n                secure: false\n            },\n            '/auth': {\n                target: 'http://localhost:9000',\n                secure: false\n            }\n        },\n        stats: {\n            modules: false,\n            cached: false,\n            colors: true,\n            chunks: false\n        },\n        historyApiFallback: {\n            index: 'app.html'\n        }\n    };\n\n    config.node = {\n        global: true,\n        process: true,\n        crypto: false,\n        clearImmediate: false,\n        setImmediate: false\n    };\n\n    return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "webpack.make.js"
      ],
      "names": [
        "_",
        "require",
        "CompressionPlugin",
        "HtmlWebpackPlugin",
        "HtmlWebpackHarddiskPlugin",
        "MiniCssExtractPlugin",
        "OptimizeCssAssetsPlugin",
        "path",
        "UglifyJsPlugin",
        "webpack",
        "module",
        "exports",
        "makeWebpackConfig",
        "options",
        "BUILD",
        "TEST",
        "DEV",
        "config",
        "mode",
        "entry",
        "app",
        "polyfills",
        "vendor",
        "output",
        "join",
        "__dirname",
        "publicPath",
        "filename",
        "chunkFilename",
        "resolve",
        "modules",
        "extensions",
        "alias",
        "primus",
        "devtool",
        "rules",
        "test",
        "use",
        "loader",
        "presets",
        "targets",
        "browsers",
        "debug",
        "plugins",
        "concat",
        "include",
        "tsconfig",
        "exclude",
        "ContextReplacementPlugin",
        "LoaderOptionsPlugin",
        "context",
        "push",
        "template",
        "alwaysWriteToDisk",
        "localEnv",
        "default",
        "e",
        "mapValues",
        "value",
        "mapKeys",
        "key",
        "env",
        "merge",
        "DefinePlugin",
        "HotModuleReplacementPlugin",
        "cache",
        "optimization",
        "splitChunks",
        "cacheGroups",
        "styles",
        "name",
        "chunks",
        "enforce",
        "minimizer",
        "parallel",
        "sourceMap",
        "stats",
        "colors",
        "reasons",
        "devServer",
        "contentBase",
        "hot",
        "proxy",
        "target",
        "secure",
        "cached",
        "historyApiFallback",
        "index",
        "node",
        "global",
        "process",
        "crypto",
        "clearImmediate",
        "setImmediate"
      ],
      "mappings": "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",
      "file": "webpack.make.js",
      "sourceRoot": "C:/Users/David",
      "sourcesContent": [
        "/*eslint-env node*/\nconst _ = require('lodash');\nconst CompressionPlugin = require('compression-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst HtmlWebpackHarddiskPlugin = require('html-webpack-harddisk-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nconst path = require('path');\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\nconst webpack = require('webpack');\n\nmodule.exports = function makeWebpackConfig(options) {\n    /**\n     * Environment type\n     * BUILD is for generating minified builds\n     * TEST is for generating test builds\n     */\n    const BUILD = !!options.BUILD;\n    const TEST = !!options.TEST;\n    const DEV = !!options.DEV;\n\n    /**\n     * Config\n     * Reference: http://webpack.github.io/docs/configuration.html\n     * This is the object where all configuration gets set\n     */\n    const config = {};\n\n    config.mode = BUILD\n        ? 'production'\n        : 'development';\n\n    /**\n     * Entry\n     * Reference: http://webpack.github.io/docs/configuration.html#entry\n     * Should be an empty object if it's generating a test build\n     * Karma will set this when it's a test build\n     */\n    if(!TEST) {\n        config.entry = {\n            app: './client/app/app.ts',\n            polyfills: './client/app/polyfills.ts',\n            vendor: [\n                'lodash'\n            ]\n        };\n    }\n\n    /**\n     * Output\n     * Reference: http://webpack.github.io/docs/configuration.html#output\n     * Should be an empty object if it's generating a test build\n     * Karma will handle setting it up for you when it's a test build\n     */\n    if(TEST) {\n        config.output = {};\n    } else {\n        config.output = {\n            // Absolute output directory\n            path: BUILD ? path.join(__dirname, '/dist/client/') : path.join(__dirname, '/.tmp/'),\n\n            // Output path from the view of the page\n            // Uses webpack-dev-server in development\n            publicPath: BUILD || DEV ? '/' : `http://localhost:${8080}/`,\n            //publicPath: BUILD ? '/' : 'http://localhost:' + env.port + '/',\n\n            // Filename for entry points\n            // Only adds hash in build mode\n            filename: BUILD ? '[name].[hash].js' : '[name].bundle.js',\n\n            // Filename for non-entry points\n            // Only adds hash in build mode\n            chunkFilename: BUILD ? '[name].[hash].js' : '[name].bundle.js'\n        };\n    }\n\n    config.resolve = {\n        modules: ['node_modules'],\n        extensions: ['.js', '.ts'],\n        alias: {\n            primus: path.resolve(__dirname, 'client/components/socket/primus.js'),\n        }\n    };\n\n    if(TEST) {\n        config.resolve = {\n            modules: [\n                'node_modules'\n            ],\n            extensions: ['.js', '.ts'],\n            alias: {\n                // for some reason the primus client and webpack don't get along in test\n                primus: path.resolve(__dirname, 'client/components/socket/primus.mock.ts'),\n            }\n        };\n    }\n\n    /**\n     * Devtool\n     * Reference: http://webpack.github.io/docs/configuration.html#devtool\n     * Type of sourcemap to use per build type\n     */\n    if(TEST) {\n        config.devtool = 'inline-source-map';\n    } else if(BUILD || DEV) {\n        config.devtool = 'source-map';\n    } else {\n        config.devtool = 'eval';\n    }\n\n    /**\n     * Loaders\n     * Reference: http://webpack.github.io/docs/configuration.html#module-loaders\n     * List: http://webpack.github.io/docs/list-of-loaders.html\n     * This handles most of the magic responsible for converting modules\n     */\n\n    // Initialize module\n    config.module = {\n        rules: [{\n            // JS LOADER\n            // Reference: https://github.com/babel/babel-loader\n            // Transpile .js files using babel-loader\n            // Compiles ES6 and ES7 into ES5 code\n            test: /\\.js$/,\n            use: [{\n                loader: 'babel-loader',\n                options: {\n                    presets: [\n                        ['babel-preset-env', {\n                            // debug: true,\n                            targets: {\n                                browsers: ['last 2 versions', 'not dead'],\n                            },\n                            debug: true,\n                            modules: false,\n                        }]\n                    ],\n                    plugins: [\n                        'angular2-annotations',\n                        'transform-runtime',\n                        'transform-decorators-legacy',\n                        'transform-class-properties',\n                        'transform-export-extensions',\n                    ].concat(TEST ? ['istanbul'] : []),\n                }\n            }].concat(DEV ? '@angularclass/hmr-loader' : []),\n            include: [\n                path.resolve(__dirname, 'client/'),\n                path.resolve(__dirname, 'server/config/environment/shared.js'),\n                path.resolve(__dirname, 'node_modules/lodash-es/'),\n            ]\n        }, {\n            // TS LOADER\n            // Reference: https://github.com/s-panferov/awesome-typescript-loader\n            // Transpile .ts files using awesome-typescript-loader\n            test: /\\.ts$/,\n            use: [{\n                loader: 'awesome-typescript-loader',\n                options: {\n                    tsconfig: path.resolve(__dirname, 'tsconfig.json')\n                },\n            }].concat(DEV ? '@angularclass/hmr-loader' : []),\n            include: [\n                path.resolve(__dirname, 'client/')\n            ]\n        }, {\n            // ASSET LOADER\n            // Reference: https://github.com/webpack/file-loader\n            // Copy png, jpg, jpeg, gif, svg, woff, woff2, ttf, eot files to output\n            // Rename the file using the asset hash\n            // Pass along the updated reference to your code\n            // You can add here any file extension you want to get copied to your output\n            test: /\\.(png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)([\\?]?.*)$/,\n            use: 'file-loader'\n        }, {\n\n            // HTML LOADER\n            // Reference: https://github.com/webpack/raw-loader\n            // Allow loading html through js\n            test: /\\.html$/,\n            use: 'raw-loader'\n        }, {\n            // CSS LOADER\n            // Reference: https://github.com/webpack/css-loader\n            // Allow loading css through js\n            //\n            // Reference: https://github.com/postcss/postcss-loader\n            // Postprocess your css with PostCSS plugins\n            test: /\\.css$/,\n            use: [\n                DEV ? 'style-loader' : MiniCssExtractPlugin.loader,\n                'css-loader',\n                'postcss-loader',\n            ],\n            include: [\n                path.resolve(__dirname, 'node_modules/bootstrap/dist/css/*.css'),\n                path.resolve(__dirname, 'client/app/app.css')\n            ]\n        }, {\n            // CSS LOADER\n            // Reference: https://github.com/webpack/css-loader\n            test: /\\.css$/,\n            use: [\n                'to-string-loader',\n                'css-loader?sourceMap',\n                'postcss-loader',\n            ],\n            include: [\n                path.resolve(__dirname, 'client')\n            ],\n            exclude: [/app\\.css$/]\n        }]\n    };\n\n    //TODO: TS Instrumenter\n\n    /**\n     * Plugins\n     * Reference: http://webpack.github.io/docs/configuration.html#plugins\n     * List: http://webpack.github.io/docs/list-of-plugins.html\n     */\n    config.plugins = [\n        // Hides the 'the request of a dependency is an expression' warnings\n        new webpack.ContextReplacementPlugin(\n            /angular(\\\\|\\/)core/,\n            path.resolve(__dirname, '../src')\n        ),\n\n        new webpack.LoaderOptionsPlugin({\n            options: {\n                context: __dirname\n            },\n\n\n        })\n    ];\n\n    if(BUILD) {\n        config.plugins.push(\n            new CompressionPlugin({}),\n            // https://github.com/webpack-contrib/mini-css-extract-plugin\n            new MiniCssExtractPlugin({\n                filename: '[name].[hash].css',\n                chunkFilename: '[id].[hash].css',\n            }),\n        );\n    }\n\n    // Skip rendering app.html in test mode\n    // Reference: https://github.com/ampedandwired/html-webpack-plugin\n    // Render app.html\n    if(!TEST) {\n        config.plugins.push(\n            new HtmlWebpackPlugin({\n                template: 'client/app.template.html',\n                filename: '../client/app.html',\n                alwaysWriteToDisk: true,\n            }),\n            new HtmlWebpackHarddiskPlugin(),\n        );\n    }\n\n    let localEnv;\n    try {\n        localEnv = require('./server/config/local.env').default;\n    } catch(e) {\n        localEnv = {};\n    }\n    localEnv = _.mapValues(localEnv, value => `\"${value}\"`);\n    localEnv = _.mapKeys(localEnv, (value, key) => `process.env.${key}`);\n\n    let env = _.merge({\n        'process.env.NODE_ENV': DEV ? '\"development\"'\n            : BUILD ? '\"production\"'\n            : TEST ? '\"test\"'\n            : '\"development\"'\n    }, localEnv);\n\n    // Reference: https://webpack.github.io/docs/list-of-plugins.html#defineplugin\n    // Define free global variables\n    config.plugins.push(new webpack.DefinePlugin(env));\n\n    if(DEV) {\n        config.plugins.push(\n            new webpack.HotModuleReplacementPlugin(),\n        );\n    }\n\n    config.cache = DEV;\n\n    if(BUILD) {\n        config.optimization = {\n            splitChunks: {\n                cacheGroups: {\n                    styles: {\n                        name: 'styles',\n                        test: /\\.css$/,\n                        chunks: 'all',\n                        enforce: true\n                    },\n                },\n            },\n            minimizer: [\n                new UglifyJsPlugin({\n                    cache: true,\n                    parallel: true,\n                    sourceMap: true // set to true if you want JS source maps\n                }),\n                new OptimizeCssAssetsPlugin({}),\n            ],\n        };\n    }\n\n    if(TEST) {\n        config.stats = {\n            colors: true,\n            reasons: true\n        };\n    }\n\n    /**\n     * Dev server configuration\n     * Reference: http://webpack.github.io/docs/configuration.html#devserver\n     * Reference: http://webpack.github.io/docs/webpack-dev-server.html\n     */\n    config.devServer = {\n        contentBase: './client/',\n        hot: true,\n        proxy: {\n            '/api': {\n                target: 'http://localhost:9000',\n                secure: false,\n            },\n            '/auth': {\n                target: 'http://localhost:9000',\n                secure: false,\n            },\n        },\n        stats: {\n            modules: false,\n            cached: false,\n            colors: true,\n            chunks: false,\n        },\n        historyApiFallback: {\n            index: 'app.html'\n        },\n    };\n\n    config.node = {\n        global: true,\n        process: true,\n        crypto: false,\n        clearImmediate: false,\n        setImmediate: false,\n    };\n\n    return config;\n};\n"
      ]
    },
    "mtime": 1571292428990
  }
}